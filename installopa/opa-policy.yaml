apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-opa
  namespace: policies
  annotations:
    policy.open-cluster-management.io/standards: FISMA
    policy.open-cluster-management.io/categories: PR.DS Data Security
    policy.open-cluster-management.io/controls: DE.CM-8 Vulnerability scans
spec:
  complianceType: musthave
  remediationAction: enforce
  disabled: false
  namespaces:
    exclude:
      - kube-*
    include:
      - default
  object-templates:
    - complianceType: musthave
      objectDefinition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: opa
    - complianceType: musthave
      objectDefinition:
        apiVersion: v1
        data:
          no_pod.rego: |-
            package kubernetes.admission
            deny[msg] {
                input.request.kind.kind == "Pod"
                input.request.namespace == "opa"
                image := input.request.object.spec.containers[_].image
                not startswith(image, "hooli.com")
                msg := sprintf("image fails to come from trusted registry: %v", [image])
            }
        kind: ConfigMap
        metadata:
          name: no-pod
          namespace: opa
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-opa
  namespace: policies
placementRef:
  name: placement-policy-opa
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-opa
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-opa
  namespace: policies
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: environment, operator: In, values: ["dev"]}
